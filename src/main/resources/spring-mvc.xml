<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd 
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 使用 Swagger Restful API文档时，添加此注解 -->
    <mvc:default-servlet-handler />
    <mvc:annotation-driven/>

    <!-- 扫描controller（controller层注入） -->
        <context:component-scan base-package="com.anmong.core.web.**">
			<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
			<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />  
		</context:component-scan>

    <!-- 支持返回json -->

    <!--start:使用Jackson 2.x的配置，需要导入的jar包：jackson-core-xxx.jar、jackson-annotations-xxx.jar、jackson-databind-xxx.jar-->
    <!--通过处理器映射DefaultAnnotationHandlerMapping来开启支持@Controller注解-->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
    <!--通过处理器适配器AnnotationMethodHandlerAdapter来开启支持@RequestMapping注解-->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <!-- 设置返回字符串编码 -->
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name = "supportedMediaTypes">
                        <list>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
                <!-- json转换器 -->
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>
    <!--end:使用Jackson 2.x的配置，需要导入的jar包：jackson-core-xxx.jar、jackson-annotations-xxx.jar、jackson-databind-xxx.jar-->

    <mvc:annotation-driven>
        <!--处理responseBody 里面日期类型  -->
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="dateFormat">
                            <bean class="java.text.SimpleDateFormat">
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
                            </bean>
                        </property>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>





    <!-- 拦截所有的controller请求 -->
		<mvc:interceptors>
			<bean class="com.anmong.common.interceptor.AccessInterceptor"></bean>
		</mvc:interceptors>

    <!-- 对模型视图添加前后缀 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/admin/view/" p:suffix=".jsp"/>

    <!-- 配置springMVC处理上传文件的信息 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"/>
        <property name="maxUploadSize" value="52428800"/>
        <property name="maxInMemorySize" value="40960"/>
        <!-- <property name="uploadTempDir" value="/uploadTemp/"/> -->
    </bean>

    <!-- 启用shrio授权注解拦截方式 -->
    <aop:config proxy-target-class="true"></aop:config>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>






    <!-- 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,是spring MVC为@Controllers分发请求所必须的 -->
    <!-- 指定自己定义的validator -->
    <!-- <mvc:annotation-driven validator="validator"/> -->

    <!-- 以下 validator ConversionService 在使用 mvc:annotation-driven 会 自动注册 -->
   <!--  <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        如果不加默认到 使用classpath下的 ValidationMessages.properties
        <property name="validationMessageSource" ref="messageSource"/>
    </bean> -->

    <!-- 国际化的消息资源文件（本系统中主要用于显示/错误消息定制） -->
   <!--  <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                             // 在web环境中一定要定位到classpath 否则默认到当前web应用下找
                <value>classpath:messages</value>
                <value>classpath:org/hibernate/validator/ValidationMessages</value>
            </list>
        </property>
        <property name="useCodeAsDefaultMessage" value="false"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="cacheSeconds" value="60"/>
    </bean>

    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
    </mvc:interceptors>

    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="defaultLocale" value="zh_CN"/>
    </bean> 
     -->
    <!-- 设置@ResponseBody返回时的编码格式 -->
<!--     <mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes" value = "text/html;charset=UTF-8" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven> -->

    <!-- 支持返回json(避免IE在ajax请求时，返回json出现下载 ) -->
<!--     <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="fastJsonHttpMessageConverter"/>
            </list>
        </property>
    </bean> -->
    
      <!-- 使用fastJson来支持JSON数据格式,默认日期格式yyyy-mm-dd hh:mm:ss -->  
<!--     <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">  
                <property name="supportedMediaTypes">  
                    <list>  
                        <value>application/json</value>  
                        <value>text/html;charset=UTF-8</value>  
                    </list>  
                </property>  
                <property name="features">  
                    <list>  
                          输出key时是否使用双引号
				         <value>QuoteFieldNames</value>
				         是否输出值为null的字段
				         <value>WriteMapNullValue</value>
				         数值字段如果为null,输出为0,而非null
				         <value>WriteNullNumberAsZero</value>
				         List字段如果为null,输出为[],而非null
				         <value>WriteNullListAsEmpty</value>
				         字符类型字段如果为null,输出为"",而非null
				         <value>WriteNullStringAsEmpty</value>
				         Boolean字段如果为null,输出为false,而非null
				         <value>WriteNullBooleanAsFalse</value>
				         null String不输出 
				         <value>WriteNullStringAsEmpty</value>
				         null String也要输出 
				         <value>WriteMapNullValue</value>
				         Date的日期转换器
				         <value>WriteDateUseDateFormat</value>
                    </list>  
                </property>  
      </bean>   -->
    
<!--   <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>-->


    <!-- 启用默认配置 -->
    <!--
      <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
          &lt;!&ndash; 配置Fastjson支持 &ndash;&gt;
          <bean class="com.anmong.common.swagger.FastJsonHttpMessageConverterEx">
            <property name="supportedMediaTypes">
              <list>
               &lt;!&ndash;  <value>text/html;charset=UTF-8</value> &ndash;&gt;
                <value>application/json;charset=UTF-8</value>
              </list>
            </property>
            <property name="features">
              <list>
              &lt;!&ndash;      输出key时是否使用双引号 &ndash;&gt;
             <value>QuoteFieldNames</value>
         &lt;!&ndash;     是否输出值为null的字段 &ndash;&gt;
             <value>WriteMapNullValue</value>
           &lt;!&ndash;   数值字段如果为null,输出为0,而非null &ndash;&gt;
             <value>WriteNullNumberAsZero</value>
           &lt;!&ndash;   List字段如果为null,输出为[],而非null &ndash;&gt;
             <value>WriteNullListAsEmpty</value>
      &lt;!&ndash;        字符类型字段如果为null,输出为"",而非null &ndash;&gt;
             <value>WriteNullStringAsEmpty</value>
            &lt;!&ndash;  Boolean字段如果为null,输出为false,而非null &ndash;&gt;
             <value>WriteNullBooleanAsFalse</value>
           &lt;!&ndash;   null String不输出  &ndash;&gt;
             &lt;!&ndash; <value>WriteNullStringAsEmpty</value> &ndash;&gt;
            &lt;!&ndash;  null String也要输出  &ndash;&gt;
            &lt;!&ndash;  <value>WriteMapNullValue</value> &ndash;&gt;
            &lt;!&ndash;  Date的日期转换器 &ndash;&gt;
             <value>WriteDateUseDateFormat</value>
              </list>
            </property>
          </bean>
        </mvc:message-converters>
      </mvc:annotation-driven>
    -->

    <!-- <mvc:annotation-driven>
         <mvc:message-converters register-defaults="true">
             &lt;!&ndash; 配置Fastjson支持 &ndash;&gt;
             <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                 <property name="supportedMediaTypes">
                     <list>
                         &lt;!&ndash;  <value>text/html;charset=UTF-8</value> &ndash;&gt;
                         <value>application/json;charset=UTF-8</value>
                     </list>
                 </property>
                 <property name="features">
                     <list> <mvc:annotation-driven>
                         &lt;!&ndash;      输出key时是否使用双引号 &ndash;&gt;
                         <value>QuoteFieldNames</value>
                         &lt;!&ndash;     是否输出值为null的字段 &ndash;&gt;
                         <value>WriteMapNullValue</value>
                         &lt;!&ndash;   数值字段如果为null,输出为0,而非null &ndash;&gt;
                         <value>WriteNullNumberAsZero</value>
                         &lt;!&ndash;   List字段如果为null,输出为[],而非null &ndash;&gt;
                         <value>WriteNullListAsEmpty</value>
                         &lt;!&ndash;        字符类型字段如果为null,输出为"",而非null &ndash;&gt;
                         <value>WriteNullStringAsEmpty</value>
                         &lt;!&ndash;  Boolean字段如果为null,输出为false,而非null &ndash;&gt;
                         <value>WriteNullBooleanAsFalse</value>
                         &lt;!&ndash;   null String不输出  &ndash;&gt;
                         &lt;!&ndash; <value>WriteNullStringAsEmpty</value> &ndash;&gt;
                         &lt;!&ndash;  null String也要输出  &ndash;&gt;
                         &lt;!&ndash;  <value>WriteMapNullValue</value> &ndash;&gt;
                         &lt;!&ndash;  Date的日期转换器 &ndash;&gt;
                         <value>WriteDateUseDateFormat</value>
                     </list>
                 </property>
             </bean>
         </mvc:message-converters>
     </mvc:annotation-driven>-->



</beans>
